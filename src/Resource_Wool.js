/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useState } from 'react'
import { useGLTF } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'

export default function Wool({ ...props }) {
  const group = useRef()
  const { nodes, materials } = useGLTF('./Models/Resource_Wool.gltf')
  // Hold state for hovered event
  const [hovered, hover] = useState(false)
  // Subscribe this component to the render-loop, rotate the mesh every frame
  useFrame((state, delta) => (
    group.current.rotation.y += 0.01))
  return (
    <group ref={group} {...props} dispose={null}
      onPointerOver={(event) => hover(true)}
      onPointerOut={(event) => hover(false)}
      scale={hovered ? 1.5 : 1}
      rotation={[Math.PI, 0, Math.PI]}
      >
      <mesh
        geometry={nodes.Sheep.geometry}
        material={materials.Material}
        position={[0.32, 0.12, 0.27]}
        rotation={[0, 1.34, 0]}
        scale={0.06}
      />
      <mesh geometry={nodes.Wool.geometry} material={materials.Material2} />
    </group>
  )
}

useGLTF.preload('./Models/Resource_Wool.gltf')
